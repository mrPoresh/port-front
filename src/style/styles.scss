@use '@angular/material' as mat;

@include mat.core();


// Define your color palettes
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$light-warn: mat.define-palette(mat.$red-palette);
$light-primary-background: mat.define-palette(mat.$grey-palette, 100, 200);

$dark-primary: mat.define-palette(mat.$blue-grey-palette);
$dark-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);
$dark-warn: mat.define-palette(mat.$deep-orange-palette);
$dark-primary-background: mat.define-palette(mat.$grey-palette, 800, 900);
//$dark-accent-background: mat.define-palette($black-2);

// Theme definitions
$light-theme: mat.define-light-theme((
  color: (
    primary: $light-primary,
    accent: $light-accent,
    warn: $light-warn,
    primary-background: $light-primary-background,
  )
));

$dark-theme: mat.define-dark-theme((
  color: (
    primary: $dark-primary,
    accent: $dark-accent,
    warn: $dark-warn,
    primary-background: $dark-primary-background,
    //accent-background: $dark-accent-background,
  )
));

:root, .light-theme {
  --primary-color: #{mat.get-color-from-palette($light-primary, 500)};
  --accent-color: #{mat.get-color-from-palette($light-accent, A200)};
  --warn-color: #{mat.get-color-from-palette($light-warn, 500)};

  --primary-background: #{mat.get-color-from-palette($dark-primary-background, 100)};

  @include mat.all-component-themes($light-theme);
}

.dark-theme {
  --primary-color: #{mat.get-color-from-palette($dark-primary, 500)};
  --accent-color: #{mat.get-color-from-palette($dark-accent, A200)};
  --warn-color: #{mat.get-color-from-palette($dark-warn, 500)};

  --primary-background: #{mat.get-color-from-palette($dark-primary-background, 900)};
  //--accent-background: mat.get-color-from-palette($dark-accent-background);

  @include mat.all-component-themes($dark-theme);
}

// Define breakpoints
$breakpoints: (
  "large": 64rem,  // 1024px
  "medium": 48rem, // 768px
  "small": 30rem   // 480px
);


html, body {
  width: 100%;
  height: 100%;
}

body {
  margin: 0;

  background-color: var(--primary-background);
  
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Font styles
h1, h2, h3, h4, h5, p {
  margin: 0;
  padding: 0;
}

// Mixin to apply responsive typography
@mixin responsive-typography($base-size, $large, $medium, $small) {
  font-size: $base-size;

  @media (max-width: map-get($breakpoints, 'large')) {
    font-size: $large;
  }
  @media (max-width: map-get($breakpoints, 'medium')) {
    font-size: $medium;
  }
  @media (max-width: map-get($breakpoints, 'small')) {
    font-size: $small;
  }
}

// Applying mixin to elements
h1 {
  font-family: "Bebas Neue", sans-serif;
  font-weight: 700; 

  @include responsive-typography(4rem, 3.5rem, 3rem, 2.5rem);
}
h2 {
  font-family: "Bebas Neue", sans-serif;
  font-weight: 600; 

  @include responsive-typography(3rem, 2.75rem, 2.5rem, 2rem);
}
h3 {
  font-family: "Ubuntu", sans-serif; 
  font-weight: 600; 

  @include responsive-typography(2rem, 1.75rem, 1.5rem, 1.5rem);
}
h4 {  //  title for def text
  font-family: "Ubuntu", sans-serif; 
  font-weight: 550;

  @include responsive-typography(1.5rem, 1.25rem, 1.25rem, 1.25rem);
}
h5 {  //  Buttons 
  font-family: "Ubuntu", sans-serif; 
  font-weight: 500;

  @include responsive-typography(1.25rem, 1.25rem, 1rem, 1rem);
}
p {   //  def text
  font-family: "Ubuntu", sans-serif; 
  font-weight: 450;

  @include responsive-typography(1rem, 1rem, 0.875rem, 0.875rem);
}